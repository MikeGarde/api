get:
  tags:
    - Sku
  summary: Get a list of skus
  description: |-
    To use multiple arguments in a filter separate values with a comma. <br/>
         *              EX: 465,123,644 <br/>
         *              A valid api call with multiple filters would look like this: http://api.fulfillment.com/endpoint?warehouses=10,12,13
  operationId: getSkus
  parameters:
    - $ref: '#/parameters/limit'
    - $ref: '#/parameters/pageIndex'
    - $ref: '#/parameters/authHeader'
    - name: ids
      in: query
      description: Sku IDs to filter by
      required: false
      type: array
      items:
        type: integer
      collectionFormat: multi
    - name: names
      in: query
      description: Filter SKUs by sku name
      required: false
      type: array
      items:
        type: string
      collectionFormat: multi
    - name: merchantIds
      in: query
      description: Filter SKUs by owning merchant Id
      required: false
      type: array
      items:
        type: string
      collectionFormat: multi
    - name: productIds
      in: query
      description: Filter SKUs by owning products Id
      required: false
      type: array
      items:
        type: string
      collectionFormat: multi
    - name: productNames
      in: query
      description: Filter SKUs by the name of products associated with a sku
      required: false
      type: array
      items:
        type: string
      collectionFormat: multi
    - name: productDescriptions
      in: query
      description: Filter SKUs by the description of products associated with a sku
      required: false
      type: array
      items:
        type: string
      collectionFormat: multi
    - name: hydrate
      in: query
      description: >-
        Comma-delimited list of properties to include on model response.
        Available properties: <b>skuProducts,merchant</b>
      required: false
      type: string
  responses:
    '200':
      description: success
      schema:
        type: array
        items:
          $ref: '#/definitions/Sku'
