openapi: 3.0.1
info:
  title: Fulfillment.com API
  description: |
    Welcome to our current iteration of our REST API. While we encourage you to upgrade to v2.0 we will continue support for our [SOAP API](https://github.com/fulfillment/soap-integration).
    
    # Versioning
    
    The Fulfillment.com (FDC) REST API is version controlled and backwards compatible. We have many future APIs scheduled for publication within our v2.0 spec so please be prepared for us to add data nodes in our responses, however, we will not remove knowledge from previously published APIs.
    
    #### A Current Response
    
    ```javascript
    {
      id: 123
    }
    ```
    
    #### A Potential Future Response
    
    ```javascript
    {
      id: 123,
      reason: "More Knowledge"
    }
    ```
    
    # Getting Started
    
    We use OAuth v2.0 to authenticate clients, you can choose [implicit](https://oauth.net/2/grant-types/implicit/) or [password](https://oauth.net/2/grant-types/password/) grant type. To obtain an OAuth `client_id` and `client_secret` contact your account executive.

    **Tip**: Generate an additional login and use those credentials for your integration so that changes are accredited to that "user".
    
    You are now ready to make requests to our other APIs by filling your `Authorization` header with `Bearer {access_token}`.
    
    ## Perpetuating Access
    
    Perpetuating access to FDC without storing your password locally can be achieved using the `refresh_token` returned by [POST /oauth/access_token](#operation/generateToken).
    
    A simple concept to achieve this is outlined below.
    
    1. Your application/script will ask you for your `username` and `password`, your `client_id` and `client_secret` will be accessible via a DB or ENV.
    2. [Request an access_token](#operation/generateToken)
      + Your function should be capable of formatting your request for both a `grant_type` of \"password\" (step 1) and \"refresh_token\" (step 4).
    3. Store the `access_token` and `refresh_token` so future requests can skip step 1
    4. When the `access_token` expires request anew using your `refresh_token`, replace both tokens in local storage.
      
    + If this fails you will have to revert to step 1.
      
    Alternatively if you choose for your application/script to have access to your `username` and `password` you can skip step 4.
      
    In all scenarios we recommend storing all credentials outside your codebase.
      
    ## Date Time Definitions
      
    We will report all date-time stamps using the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) standard. When using listing API's where fromDate and toDate are available note that both dates are inclusive while requiring the fromDate to be before or at the toDate.
    
    ### The Fulfillment Process
    
    Many steps are required to fulfill your order we report back to you three fundamental milestones inside the orders model.
    
    * `recordedOn` When we received your order. This will never change.
    
    * `dispatchDate` When the current iteration of your order was scheduled for fulfillment. This may change however it is an indicator that the physical process of fulfillment has begun and a tracking number has been **assigned** to your order. The tracking number **MAY CHANGE**. You will not be able to cancel an order once it has been dispatched. If you need to recall an order that has been dispatched please contact your account executive.
    
    * `departDate` When we recorded your order passing our final inspection and placed with the carrier. At this point it is **safe to inform the consignee** of the tracking number as it will not change.
    
    ## Evaluating Error Responses
    
    We currently return two different error models, with and without context. All errors will include a `message` node while errors with `context` will include additional information designed to save you time when encountering highly probable errors. For example, when you send us a request to create a duplicate order, we will reject your request and the context will include the FDC order `id` so that you may record it for your records.
    
    ### Without Context
    
    New order with missing required fields.
    
    | Header | Response |
    | ------ | -------- |
    | Status | `400 Bad Request` |
    
    ```javascript
    {    
      "message": "Invalid request body"
    }
    ```
    
    ### With Context
    
    New order with duplicate `merchantOrderId`.
    
    | Header | Response |
    | ------ | -------- |
    | Status | `409 Conflict` |
    
    ```javascript
    {
      "message": "Duplicate Order",
      "context": {
        "id": 123
      }
    }
    ```
    
    ## Status Codes
    
    Codes are a concatenation of State, Stage, and Detail.
    
    `^([0-9]{2})([0-9]{2})([0-9]{2})$`
    
    | Code | State              | Stage    | Detail         |
    | ---- | ------------------ | -------- | -------------- |
    | 010101 | Processing Order | Recieved | Customer Order |
    | 010102 | Processing Order | Recieved | Recieved |
    | 010201 | Processing Order | Approved | |
    | 010301 | Processing Order | Hold | Merchant Stock |
    | 010302 | Processing Order | Hold | Merchant Funds |
    | 010303 | Processing Order | Hold | For Merchant |
    | 010304 | Processing Order | Hold | Oversized Shipment |
    | 010305 | Processing Order | Hold | Invalid Parent Order |
    | 010306 | Processing Order | Hold | Invalid Address |
    | 010307 | Processing Order | Hold | By Admin |
    | 010401 | Processing Order | Address Problem | Incomplete Address |
    | 010402 | Processing Order | Address Problem | Invalid Locality |
    | 010403 | Processing Order | Address Problem | Invalid Region |
    | 010404 | Processing Order | Address Problem | Address Not Found |
    | 010405 | Processing Order | Address Problem | Many Addresses Found |
    | 010406 | Processing Order | Address Problem | Invalid Postal Code |
    | 010407 | Processing Order | Address Problem | Country Not Mapped |
    | 010408 | Processing Order | Address Problem | Invalid Recipient Name |
    | 010409 | Processing Order | Address Problem | Bad UK Address |
    | 010410 | Processing Order | Address Problem | Invalid Address Line 1 or 2 |
    | 010501 | Processing Order | Sku Problem | Invalid SKU |
    | 010501 | Processing Order | Sku Problem | Child Order has Invalid SKUs |
    | 010601 | Processing Order | Facility Problem | Facility Not Mapped |
    | 010701 | Processing Order | Ship Method Problem | Unmapped Ship Method |
    | 010702 | Processing Order | Ship Method Problem | Unmapped Ship Cost |
    | 010703 | Processing Order | Ship Method Problem | Missing Ship Method |
    | 010704 | Processing Order | Ship Method Problem | Invalid Ship Method |
    | 010705 | Processing Order | Ship Method Problem | Order Weight Outside of Ship Method Weight |
    | 010801 | Processing Order | Inventory Problem | Insufficient Inventory In Facility |
    | 010802 | Processing Order | Inventory Problem | Issue Encountered During Inventory Adjustment |
    | 010901 | Processing Order | Released To WMS | Released |
    | 020101 | Fulfillment In Progress | Postage Problem | Address Issue |
    | 020102 | Fulfillment In Progress | Postage Problem | Postage OK, OMS Issue Occurred |
    | 020103 | Fulfillment In Progress | Postage Problem | Postage Void Failed |
    | 020201 | Fulfillment In Progress | Postage Acquired | |
    | 020301 | Fulfillment In Progress | Postage Voided | Postage Void Failed Gracefully |
    | 020301 | Fulfillment In Progress | Hold | Departure Hold Requested |
    | 020401 | Fulfillment In Progress | 4PL Processing | |
    | 020501 | Fulfillment In Progress | 4PL Problem | Order is Proccessable, Postage Issue Occurred |
    | 020601 | Fulfillment In Progress | Label Printed | |
    | 020701 | Fulfillment In Progress | Shipment Cubed | |
    | 020801 | Fulfillment In Progress | Picking Inventory | |
    | 020901 | Fulfillment In Progress | Label Print Verified | |
    | 021001 | Fulfillment In Progress | Passed Final Inspection | |
    | 030101 | Shipped | Fulfilled By 4PL | |
    | 030102 | Shipped | Fulfilled By 4PL | Successfully Fulfilled, OMS Encountered Issue During Processing |
    | 030201 | Shipped | Fulfilled By FDC | |
    | 040101 | Returned | Returned | |
    | 050101 | Cancelled | Cancelled | |
    | 060101 | Test | Test | Test |
  termsOfService: https://fulfillment.github.io/api/terms/
  contact:
    email: dev@fulfillment.com
  version: "2.0"
  x-logo:
    url: https://fulfillment.github.io/api/FDC_API_144x144.png
servers:
  - url: https://api.fulfillment.com/v2
tags:
  - name: Auth
    description: Please note that in keeping with the OAuth standard, parameters are
      underscored however all other API parameters are camelCase.
  - name: Orders
    description: Creating, viewing, and canceling orders.
paths:
  /inventory:
    get:
      tags:
        - Inventory
      summary: List of Item Inventories
      description: Retrieve inventory for one or more items
      operationId: getInventory
      security:
        - fdcAuth:
            - oms
      parameters:
        - name: page
          in: query
          description: A multiplier of the number of items (limit paramater) to skip
            before returning results
          schema:
            minimum: 1
            type: integer
            default: 1
        - name: limit
          in: query
          description: The numbers of items to return
          schema:
            maximum: 200
            minimum: 1
            type: integer
            default: 80
        - name: merchantIds
          in: query
          description: A CSV of merchant id, '123' or '1,2,3'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: externalSkuNames
          in: query
          description: A CSV of sku reference names, 'skuName1' or 'skuName1,skuName2,skuName3'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        200:
          description: Found Inventory
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/inventoriesArray'
        400:
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/standardError'
        401:
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/standardError'
        403:
          description: Access Denied
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/standardError'
        404:
          description: No Inventory Found
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/standardError'
  /oauth/access_token:
    post:
      tags:
        - Auth
      summary: Generate an Access Token
      description: By default tokens are valid for 7 days while refresh tokens are
        valid for 30 days. If your `grant_type` is "password" include the `username`
        and `password`, if however your `grant_type` is "refresh_token" the username/password
        are not required, instead set the `refresh_token`
      externalDocs:
        description: More Information on Refresh Tokens
        url: '#section/Getting-Started/Perpetuating-Access'
      operationId: generateToken
      requestBody:
        description: Get an access token
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/accessTokenRequest'
        required: true
      responses:
        200:
          description: Authorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/accessTokenResponse'
        401:
          description: Unauthorized
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/standardError'
      x-codegen-request-body-name: body
  /orders:
    get:
      tags:
        - Orders
      summary: List of Orders
      description: Retrieve many orders at once
      operationId: getOrders
      security:
        - fdcAuth:
            - oms
      parameters:
        - name: fromDate
          in: query
          description: Date-time in ISO 8601 format for selecting orders after, or at,
            the specified time
          required: true
          schema:
            type: string
        - name: toDate
          in: query
          description: Date-time in ISO 8601 format for selecting orders before, or
            at, the specified time
          required: true
          schema:
            type: string
        - name: merchantIds
          in: query
          description: A CSV of merchant id, '123' or '1,2,3'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: warehouseIds
          in: query
          description: A CSV of warehouse id, '123' or '1,2,3'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: page
          in: query
          description: A multiplier of the number of items (limit paramater) to skip
            before returning results
          schema:
            minimum: 1
            type: integer
            default: 1
        - name: limit
          in: query
          description: The numbers of items to return
          schema:
            maximum: 200
            minimum: 1
            type: integer
            default: 80
      responses:
        200:
          description: Found Orders
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ordersArray'
        404:
          description: No Orders Found
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/standardError'
    post:
      tags:
        - Orders
      summary: New Order
      description: |
        Error Notes&#58;
        * When `409 Conflict` is a 'Duplicate Order' the `context` will include the FDC `id`, see samples.
      operationId: createOrder
      security:
        - fdcAuth:
            - oms
      requestBody:
        description: The order to create
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/newOrder'
        required: true
      responses:
        201:
          description: Order Created
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/order'
        400:
          description: Invalid order object
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/standardError'
        401:
          description: You do not have permission to create orders
          content: {}
        409:
          description: Conflict
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/standardErrorWithContext'
              example:
                message: Duplicate Order
                context:
                  id: 123
      x-codegen-request-body-name: body
  /orders/{id}:
    get:
      tags:
        - Orders
      summary: Order Details
      description: For the fastest results use the FDC provided `id` however you can
        use your `merchantOrderId` as the `id`.
      operationId: getOrder
      security:
        - fdcAuth:
            - oms
      parameters:
        - name: id
          in: path
          description: The FDC order Id
          required: true
          schema:
            type: string
        - name: merchantId
          in: query
          description: Providing your `merchantId` indicates the `id` is your `merchantOrderId`.
            Although it is not necessary to provide this it will speed up your results
            when using your `merchantOrderId` however it will slow your results when
            using the FDC provided `id`
          schema:
            type: integer
      responses:
        200:
          description: Order Found
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/order'
        404:
          description: Order not found
          content: {}
    delete:
      tags:
        - Orders
      summary: Cancel an Order
      operationId: cancelOrder
      security:
        - fdcAuth:
            - oms
      parameters:
        - name: id
          in: path
          description: ID of order that needs to be canceled
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Your order was successfully canceled
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/order'
        404:
          description: Order not found
          content: {}
        405:
          description: Could not cancel your order, perhaps it already shipped
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/standardError'
  /orders/{id}/ship:
    put:
      tags:
        - Partners
      summary: Ship an Order
      description: Note, this API is used to update orders and is reserved for our
        shipping partners.
      operationId: putOrderShip
      security:
        - fdcAuth:
            - oms
      parameters:
        - name: id
          in: path
          description: The FDC order Id
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Shipping Details
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/orderShip'
        required: true
      responses:
        200:
          description: Order Found
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/order'
        404:
          description: Order not found
          content: {}
      x-codegen-request-body-name: body
  /orders/{id}/status:
    put:
      tags:
        - Partners
      summary: Update Order Status
      description: Note, this API is used to update orders and is reserved for our
        shipping partners.
      operationId: putOrderStatus
      security:
        - fdcAuth:
            - oms
      parameters:
        - name: id
          in: path
          description: The FDC order Id
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: New status event
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/statusTypeSimple'
        required: true
      responses:
        200:
          description: Order Found
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/order'
        404:
          description: Order not found
          content: {}
      x-codegen-request-body-name: body
  /returns:
    get:
      tags:
        - Returns
      summary: List Returns
      description: Retrieves summary return activity during the queried timespan.
        Although return knowledge can be learned from `GET /orders/{id}` it can take
        an unknown amount of time for an order that is refused or undeliverable to
        return to an FDC facility. Instead we recommend regularly querying this API.
      operationId: getReturns
      security:
        - fdcAuth:
            - oms
      parameters:
        - name: fromDate
          in: query
          description: Date-time in ISO 8601 format for selecting orders after, or at,
            the specified time
          required: true
          schema:
            type: string
        - name: toDate
          in: query
          description: Date-time in ISO 8601 format for selecting orders before, or
            at, the specified time
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: A multiplier of the number of items (limit paramater) to skip
            before returning results
          schema:
            minimum: 1
            type: integer
            default: 1
        - name: limit
          in: query
          description: The numbers of items to return
          schema:
            maximum: 200
            minimum: 1
            type: integer
            default: 80
      responses:
        200:
          description: Returns
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/returns'
    put:
      tags:
        - Returns
      summary: Inform us of an RMA
      description: ""
      operationId: putReturns
      security:
        - fdcAuth:
            - oms
      requestBody:
        description: RMA
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/rma'
        required: true
      responses:
        201:
          description: RMA Created
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/rmaResponse'
        202:
          description: RMA Updated
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/rmaResponse'
        404:
          description: A Component of Your Request Was Not Found
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/standardError'
        409:
          description: RMA Already Processed
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/rmaResponse'
  /users/me:
    get:
      tags:
        - Users
      summary: About Me
      description: Returns the user profile of the access token's owner. This could
        be useful if managing multiple accounts or confirming validity of a token.
      operationId: getUserMe
      security:
        - fdcAuth:
            - oms
      responses:
        200:
          description: User
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/userContact'
components:
  securitySchemes:
    fdcAuth:
      type: oauth2
      flows:
        password:
          tokenUrl: "https://api.fulfillment.com/v2/oauth/access_token"
          refreshUrl: "https://api.fulfillment.com/v2/oauth/access_token"
          scopes:
            oms: "read & write access"
        implicit:
          authorizationUrl: "https://api.fulfillment.com/v2/oauth/authorize"
          scopes:
            oms: "read & write access"
  schemas:
    accessTokenRequest:
      required:
        - client_id
        - client_secret
        - grant_type
        - scope
      type: object
      properties:
        client_id:
          type: string
          description: Id and secret provided by FDC
        client_secret:
          type: string
        grant_type:
          type: string
          description: Indicates how you're authenticating your request, see `username`,
            `password`, and `refresh_token` below
          enum:
            - password
            - refresh_token
        scope:
          type: string
          description: Currently limited to Order Management System
          default: oms
          enum:
            - oms
        username:
          type: string
          description: Required along with `password` if not "refreshing" the token
        password:
          type: string
          description: See above
        refresh_token:
          type: string
          description: You may request future tokens with the `refresh_token` from your previous `/oauth/access_token` request
    accessTokenResponse:
      type: object
      properties:
        access_token:
          type: string
        token_type:
          type: string
          default: Bearer
        expires_in:
          type: integer
        refresh_token:
          type: string
    consignee:
      required:
        - address1
        - addressLocality
        - addressRegion
        - country
        - firstName
        - id
        - lastName
        - postalCode
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        phone:
          type: string
        address1:
          type: string
        address2:
          type: string
        addressLocality:
          type: string
          description: City
        addressRegion:
          type: string
          description: Province / State
        postalCode:
          type: string
          description: Postal Code / Zip
        country:
          type: string
          description: Ideally provide the two character ISO code
        companyName:
          type: string
        iso:
          $ref: '#/components/schemas/isoCountry'
        updatedAt:
          type: string
          format: date-time
        updatedBy:
          $ref: '#/components/schemas/user'
    inventoriesArray:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/itemInventory'
        meta:
          type: object
          properties:
            pagination:
              $ref: '#/components/schemas/pagination'
    isoCountry:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          description: Country Name
        iso2:
          pattern: '[A-Z]{2}'
          type: string
          description: Two character ISO code
    itemInventory:
      type: object
      properties:
        item:
          type: object
          properties:
            id:
              type: integer
              description: FDC ID for this Item
            skuReference:
              type: string
              description: Sku reference name for this item
          description: Item this inventory data is based on
        merchant:
          type: object
          properties:
            name:
              type: string
              description: Merchants name for this item
          description: Merchant that owns this item
        quantity:
          type: object
          properties:
            total:
              type: object
              properties:
                availableToPromise:
                  type: integer
                  description: Number of items that are available to be used in an
                    order
    merchant:
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          description: Merchant Company Name
    newContactInfo:
      required:
        - address1
        - addressLocality
        - addressRegion
        - country
        - email
        - firstName
        - lastName
        - phone
      type: object
      properties:
        email:
          type: string
          description: Email, required for international shipments
        firstName:
          type: string
        lastName:
          type: string
        phone:
          type: string
          description: Phone number, required for international shipments
        address1:
          type: string
          description: Address Line 1
        address2:
          type: string
          description: Address Line 2
        addressLocality:
          type: string
          description: City
        addressRegion:
          type: string
          description: Province / State
        postalCode:
          type: string
          description: Postal Code / Zip
        country:
          type: string
          description: Country, for best results please provide the two character
            ISO code
        companyName:
          type: string
    newOrder:
      required:
        - items
        - merchantOrderId
        - recipient
        - shippingMethod
      type: object
      properties:
        merchantId:
          type: integer
          description: Necessary if you have a multitenancy account, otherwise we
            will associate the order with your account
        merchantOrderId:
          type: string
          description: Unique ID provided by the merchant
        items:
          type: array
          items:
            $ref: '#/components/schemas/newOrderItem'
        recipient:
          $ref: '#/components/schemas/newContactInfo'
        shippingMethod:
          type: string
        notes:
          type: string
        integrator:
          type: string
          description: Use of this property requires special permission and must be
            discussed with your account executive; values are restricted while custom
            values need to be accepted by your AE.
          enum:
            - 1ShoppingCart
            - 3dCart
            - AdobeBC
            - AmazonAU
            - AmazonEU
            - AmazonNA
            - BigCommerce
            - BrandBoom
            - BrightPearl
            - BuyGoods
            - Celery
            - ChannelAdvisor
            - Clickbank
            - CommerceHub
            - Custom
            - Demandware
            - Ebay
            - Ecwid
            - Etsy
            - FoxyCart
            - Goodsie
            - Infusionsoft
            - Konnektive
            - LimeLight
            - Linio
            - Linnworks
            - Magento
            - Netsuite
            - NewEgg
            - Nexternal
            - NuOrder
            - Opencart
            - OrderWave
            - osCommerce1
            - Overstock
            - PayPal
            - PrestaShop
            - Pricefalls
            - Quickbooks
            - Rakuten
            - Sears
            - Sellbrite
            - SellerCloud
            - Shipstation
            - Shopify
            - Skubana
            - SolidCommerce
            - SparkPay
            - SpreeCommerce
            - spsCommerce
            - StitchLabs
            - StoneEdge
            - TradeGecko
            - UltraCart
            - Volusion
            - VTEX
            - Walmart
            - WooCommerce
            - Yahoo
        warehouse:
          type: object
          properties:
            id:
              type: integer
          description: We automatically select a warehouse based on inventory availability,
            requested carrier and delivery schedule, and carrier cost. You may however
            override this process. Because this is not recommended please inform your
            AE prior to using so they may enable this feature.
    newOrderItem:
      required:
        - declaredValue
        - quantity
        - sku
      type: object
      properties:
        quantity:
          minimum: 1
          type: integer
        sku:
          type: string
        declaredValue:
          type: number
          description: Using USD, a per unit value of a single SKU. If your declaring
            a kit this is the sum total for a single kit. In both scenarios we will
            multiply the `declaredValue` against the `quantity` for customs declaration.
          format: double
    order:
      required:
        - currentStatus
        - id
        - merchant
        - merchantOrderId
        - merchantShippingMethod
        - originalConsignee
        - recordedOn
        - validatedConsignee
      type: object
      properties:
        id:
          type: integer
          description: FDC ID for this order
        parentOrder:
          type: object
          properties:
            id:
              type: integer
              description: Reference to parent `id` if order was grouped
        merchantOrderId:
          type: string
          description: Merchant provided ID
        purchaseOrderNum:
          type: string
          description: Merchant provided PO#
        merchantShippingMethod:
          type: string
          description: Requested ship method
        recordedOn:
          type: string
          description: DateTime order was recorded by FDC
          format: date-time
        dispatchDate:
          type: string
          description: DateTime order was dispatched for fulfillment by FDC
          format: date-time
        departDate:
          type: string
          description: DateTime order departed an FDC warehouse
          format: date-time
        merchant:
          $ref: '#/components/schemas/merchant'
        warehouse:
          $ref: '#/components/schemas/warehouse'
        currentStatus:
          $ref: '#/components/schemas/statusEvent'
        originalConsignee:
          $ref: '#/components/schemas/consignee'
        validatedConsignee:
          $ref: '#/components/schemas/consignee'
        trackingNumbers:
          type: array
          items:
            $ref: '#/components/schemas/trackingNumber'
    ordersArray:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/order'
        meta:
          type: object
          properties:
            pagination:
              $ref: '#/components/schemas/pagination'
    orderShip:
      type: object
      properties:
        trackingNumber:
          type: string
          description: Tracking number of package
        weightOverride:
          type: number
          description: Override predicted weight of package
          format: float
    pagination:
      type: object
      properties:
        total:
          type: integer
          description: Total number of records available to request
        count:
          type: integer
          description: Count of records returned in response, this will be equal to
            or less then the limit paramater
        currentPage:
          type: integer
          description: Current page of the response, this will match the page paramater
        totalPages:
          type: integer
          description: Total number of pages available to request
    return:
      required:
        - createdAt
        - createdBy
        - id
        - reason
        - status
        - updatedAt
        - updatedBy
      type: object
      properties:
        id:
          type: integer
        comments:
          type: string
          nullable: true
        returnedBy:
          type: string
        updatedAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        reason:
          required:
            - id
            - title
          type: object
          properties:
            id:
              type: integer
            title:
              type: string
        status:
          required:
            - id
            - title
          type: object
          properties:
            id:
              type: integer
            title:
              type: string
        createdBy:
          $ref: '#/components/schemas/user'
        updatedBy:
          $ref: '#/components/schemas/user'
        order:
          type: object
          nullable: true
          properties:
            id:
              type: integer
            merchantId:
              type: integer
            merchantOrderId:
              type: string
        rmaDetails:
          type: array
          items:
            $ref: '#/components/schemas/rmaDetail'
    rmaDetail:
      type: object
      properties:
        id:
          type: integer
        rmaNumber:
          type: string
        nonRestockedReason:
          type: object
          nullable: true
          properties:
            id:
              type: integer
            title:
              type: string
        quantityShipped:
          type: integer
        quantityReturned:
          type: integer
        quantityRestocked:
          type: integer
        comments:
          type: string
          nullable: true
        item:
          type: object
          properties:
            id:
              type: integer
            sku:
              type: string
    returns:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/return'
        meta:
          type: object
          properties:
            pagination:
              $ref: '#/components/schemas/pagination'
    rma:
      type: object
      required:
        - rmaNumber
        - recipient
        - items
      properties:
        rmaNumber:
          type: string
        merchantOrderId:
          type: string
        recipient:
          $ref: '#/components/schemas/newContactInfo'
        items:
          type: array
          items:
            required:
              - sku
              - quantityExpected
            properties:
              sku:
                type: string
              quantityExpected:
                type: integer
                example: 1
                minimum: 1
    rmaResponse:
      type: object
      required:
        - rmaNumber
        - recipient
        - items
      properties:
        rmaNumber:
          type: string
        merchantOrderId:
          type: string
        recipient:
          $ref: '#/components/schemas/consignee'
        items:
          type: array
          items:
            required:
              - sku
              - quantityExpected
            properties:
              sku:
                type: string
              quantityExpected:
                type: integer
                example: 1
                minimum: 1
    standardError:
      type: object
      properties:
        message:
          type: string
    standardErrorWithContext:
      type: object
      properties:
        message:
          type: string
        context:
          type: array
          items:
            type: object
    statusEvent:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
        date:
          type: string
          description: DateTime of Status Event
          format: date-time
        reason:
          type: string
          description: Explanation for status
        status:
          $ref: '#/components/schemas/statusType'
        createdBy:
          $ref: '#/components/schemas/user'
    statusType:
      required:
        - code
        - detailCode
        - stage
        - state
      type: object
      properties:
        id:
          type: integer
          description: Depricated, use code instead
        code:
          pattern: ^\d{6}$
          type: string
          description: Code, see [status codes](#section/Getting-Started/Status-Codes)
        detailCode:
          pattern: ^\d{2}$
          type: string
        name:
          type: string
          description: Depricated, use stage/state instead
        reason:
          type: string
          description: Depricated
        detail:
          type: string
        state:
          type: object
          properties:
            name:
              type: string
            code:
              type: string
        stage:
          type: object
          properties:
            name:
              type: string
            code:
              type: string
        actionRequiredBy:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
              description: Human readable description of responsible party to resolve
                the issue
          description: Responsibility for resolving this issue
        isClosed:
          type: boolean
          description: Depricated, does this status event close the order
    statusTypeSimple:
      required:
        - reason
        - status
      type: object
      properties:
        status:
          required:
            - code
          type: object
          properties:
            code:
              pattern: ^\d{6}$
              type: string
        reason:
          type: string
          description: Human-readable description
    trackingNumber:
      type: object
      properties:
        value:
          type: string
          description: The human readable tracking number recipients (consignee) expect
        barcodeScanValue:
          type: string
          description: The computer readable alternative to the human readable
        carrier:
          type: string
    user:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
    userContact:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        username:
          type: string
        deptLeader:
          type: boolean
        status:
          type: boolean
        updatedBy:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createDate:
          type: string
          format: date-time
        merchant:
          type: object
          properties:
            id:
              type: integer
        contactInfo:
          $ref: '#/components/schemas/consignee'
        apiKey:
          type: string
          description: Depricated
    warehouse:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
  parameters:
    authHeader:
      name: Authorization
      in: header
      description: OAuth 2.0 Bearer Access Token
      required: true
      schema:
        type: string
    fromDateParam:
      name: fromDate
      in: query
      description: Date-time in ISO 8601 format for selecting orders after, or at,
        the specified time
      required: true
      schema:
        type: string
    toDateParam:
      name: toDate
      in: query
      description: Date-time in ISO 8601 format for selecting orders before, or at,
        the specified time
      required: true
      schema:
        type: string
    pageParam:
      name: page
      in: query
      description: A multiplier of the number of items (limit paramater) to skip before
        returning results
      schema:
        minimum: 1
        type: integer
        default: 1
    limitParam:
      name: limit
      in: query
      description: The numbers of items to return
      schema:
        maximum: 200
        minimum: 1
        type: integer
        default: 80
    merchantParam:
      name: merchantIds
      in: query
      description: A CSV of merchant id, '123' or '1,2,3'
      style: form
      explode: false
      schema:
        type: array
        items:
          type: integer
    warehouseParam:
      name: warehouseIds
      in: query
      description: A CSV of warehouse id, '123' or '1,2,3'
      style: form
      explode: false
      schema:
        type: array
        items:
          type: integer
    externalSkuNameParam:
      name: externalSkuNames
      in: query
      description: A CSV of sku reference names, 'skuName1' or 'skuName1,skuName2,skuName3'
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
x-tagGroups:
  - name: Support
    tags:
      - Auth
      - Users
  - name: Order Management
    tags:
      - Orders
      - Returns
      - Partners
  - name: Items
    tags:
      - Inventory